// Code generated by goa v3.22.5, DO NOT EDIT.
//
// task client
//
// Command:
// $ goa gen github.com/neatflowcv/focus/design

package task

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "task" service client.
type Client struct {
	SetupEndpoint  goa.Endpoint
	CreateEndpoint goa.Endpoint
	ListEndpoint   goa.Endpoint
	UpdateEndpoint goa.Endpoint
	DeleteEndpoint goa.Endpoint
}

// NewClient initializes a "task" service client given the endpoints.
func NewClient(setup, create, list, update, delete_ goa.Endpoint) *Client {
	return &Client{
		SetupEndpoint:  setup,
		CreateEndpoint: create,
		ListEndpoint:   list,
		UpdateEndpoint: update,
		DeleteEndpoint: delete_,
	}
}

// Setup calls the "setup" endpoint of the "task" service.
// Setup may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError): Unauthorized
//   - "InternalServerError" (type *goa.ServiceError): Internal server error
//   - "TaskNotFound" (type *goa.ServiceError): Task not found
//   - error: internal error
func (c *Client) Setup(ctx context.Context, p *SetupTaskInput) (err error) {
	_, err = c.SetupEndpoint(ctx, p)
	return
}

// Create calls the "create" endpoint of the "task" service.
// Create may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError): Unauthorized
//   - "InternalServerError" (type *goa.ServiceError): Internal server error
//   - "TaskNotFound" (type *goa.ServiceError): Task not found
//   - error: internal error
func (c *Client) Create(ctx context.Context, p *CreateTaskInput) (res *Createtaskoutput, err error) {
	var ires any
	ires, err = c.CreateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Createtaskoutput), nil
}

// List calls the "list" endpoint of the "task" service.
// List may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError): Unauthorized
//   - "InternalServerError" (type *goa.ServiceError): Internal server error
//   - "TaskNotFound" (type *goa.ServiceError): Task not found
//   - error: internal error
func (c *Client) List(ctx context.Context, p *ListPayload) (res TaskdetailCollection, err error) {
	var ires any
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(TaskdetailCollection), nil
}

// Update calls the "update" endpoint of the "task" service.
// Update may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError): Unauthorized
//   - "InternalServerError" (type *goa.ServiceError): Internal server error
//   - "TaskNotFound" (type *goa.ServiceError): Task not found
//   - error: internal error
func (c *Client) Update(ctx context.Context, p *TaskUpdateInput) (res *Taskdetail, err error) {
	var ires any
	ires, err = c.UpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Taskdetail), nil
}

// Delete calls the "delete" endpoint of the "task" service.
// Delete may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError): Unauthorized
//   - "InternalServerError" (type *goa.ServiceError): Internal server error
//   - "TaskNotFound" (type *goa.ServiceError): Task not found
//   - error: internal error
func (c *Client) Delete(ctx context.Context, p *TaskDeleteInput) (err error) {
	_, err = c.DeleteEndpoint(ctx, p)
	return
}
