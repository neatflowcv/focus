// Code generated by goa v3.22.5, DO NOT EDIT.
//
// task HTTP server types
//
// Command:
// $ goa gen github.com/neatflowcv/focus/design

package server

import (
	task "github.com/neatflowcv/focus/gen/task"
	taskviews "github.com/neatflowcv/focus/gen/task/views"
	goa "goa.design/goa/v3/pkg"
)

// CreateRequestBody is the type of the "task" service "create" endpoint HTTP
// request body.
type CreateRequestBody struct {
	// The parent ID of the task
	ParentID *string `form:"parent_id,omitempty" json:"parent_id,omitempty" xml:"parent_id,omitempty"`
	// The title of the task
	Title *string `form:"title,omitempty" json:"title,omitempty" xml:"title,omitempty"`
}

// CreateResponseBody is the type of the "task" service "create" endpoint HTTP
// response body.
type CreateResponseBody struct {
	// The ID of the task
	ID string `form:"id" json:"id" xml:"id"`
	// The parent ID of the task
	ParentID *string `form:"parent_id,omitempty" json:"parent_id,omitempty" xml:"parent_id,omitempty"`
	// The title of the task
	Title string `form:"title" json:"title" xml:"title"`
	// The timestamp when the task was created
	CreatedAt int64 `form:"created_at" json:"created_at" xml:"created_at"`
	// The status of the task
	Status string `form:"status" json:"status" xml:"status"`
	// The order of the task
	Order float64 `form:"order" json:"order" xml:"order"`
}

// TaskdetailResponseCollection is the type of the "task" service "list"
// endpoint HTTP response body.
type TaskdetailResponseCollection []*TaskdetailResponse

// TaskdetailResponse is used to define fields on response body types.
type TaskdetailResponse struct {
	// The ID of the task
	ID string `form:"id" json:"id" xml:"id"`
	// The parent ID of the task
	ParentID *string `form:"parent_id,omitempty" json:"parent_id,omitempty" xml:"parent_id,omitempty"`
	// The title of the task
	Title string `form:"title" json:"title" xml:"title"`
	// The timestamp when the task was created
	CreatedAt int64 `form:"created_at" json:"created_at" xml:"created_at"`
	// The status of the task
	Status string `form:"status" json:"status" xml:"status"`
	// The order of the task
	Order float64 `form:"order" json:"order" xml:"order"`
}

// NewCreateResponseBody builds the HTTP response body from the result of the
// "create" endpoint of the "task" service.
func NewCreateResponseBody(res *taskviews.TaskdetailView) *CreateResponseBody {
	body := &CreateResponseBody{
		ID:        *res.ID,
		ParentID:  res.ParentID,
		Title:     *res.Title,
		CreatedAt: *res.CreatedAt,
		Status:    *res.Status,
		Order:     *res.Order,
	}
	return body
}

// NewTaskdetailResponseCollection builds the HTTP response body from the
// result of the "list" endpoint of the "task" service.
func NewTaskdetailResponseCollection(res taskviews.TaskdetailCollectionView) TaskdetailResponseCollection {
	body := make([]*TaskdetailResponse, len(res))
	for i, val := range res {
		body[i] = marshalTaskviewsTaskdetailViewToTaskdetailResponse(val)
	}
	return body
}

// NewCreateTaskInput builds a task service create endpoint payload.
func NewCreateTaskInput(body *CreateRequestBody) *task.TaskInput {
	v := &task.TaskInput{
		ParentID: body.ParentID,
		Title:    *body.Title,
	}

	return v
}

// NewListPayload builds a task service list endpoint payload.
func NewListPayload(parentID *string, recursive *bool) *task.ListPayload {
	v := &task.ListPayload{}
	v.ParentID = parentID
	v.Recursive = recursive

	return v
}

// ValidateCreateRequestBody runs the validations defined on CreateRequestBody
func ValidateCreateRequestBody(body *CreateRequestBody) (err error) {
	if body.Title == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("title", "body"))
	}
	return
}
